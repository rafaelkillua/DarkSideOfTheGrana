package view.relatorio;

import view.transacao.Renderizador;
import core.Sistema;

import java.awt.*;
import java.text.*;
import java.util.*;
import java.util.List;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import models.*;

import org.jfree.chart.*;
import org.jfree.chart.labels.*;
import org.jfree.chart.plot.*;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.ui.*;

/**
 *
 * @author Grupo
 * @version 1.0
 */
public class Relatorio extends javax.swing.JDialog {

    /**
     *
     */
    private static final long serialVersionUID = 1L;

    SimpleDateFormat formataDataMesAno = new SimpleDateFormat("MM/yyyy");
    private static List<Transacao> listaDeTransacoes;

    /**
     * Creates new form Extrato
     */
    public Relatorio(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getRootPane().setDefaultButton(botaoGerar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipoDeTransacao = new javax.swing.ButtonGroup();
        tipoDeRelatorio = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        labelTitulo = new javax.swing.JLabel();
        botaoGerar = new javax.swing.JButton();
        botaoDespesa = new javax.swing.JRadioButton();
        botaoProvento = new javax.swing.JRadioButton();
        selectCategoria = new javax.swing.JComboBox();
        labelCategoria = new javax.swing.JLabel();
        labelMes = new javax.swing.JLabel();
        botaoVoltar = new javax.swing.JButton();
        selectMesInicio = new com.toedter.calendar.JMonthChooser();
        selectAnoInicio = new com.toedter.calendar.JYearChooser();
        labelA = new javax.swing.JLabel();
        selectMesFinal = new com.toedter.calendar.JMonthChooser();
        selectAnoFinal = new com.toedter.calendar.JYearChooser();
        botaoLista = new javax.swing.JRadioButton();
        botaoHistograma = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        labelTipo = new javax.swing.JLabel();
        labelModo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dark Side of the Grana -  Relatorio");

        jPanel1.setBackground(new java.awt.Color(251, 251, 251));
        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        labelTitulo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelTitulo.setText("     Relatório");
        labelTitulo.setToolTipText("");
        labelTitulo.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        botaoGerar.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        botaoGerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/chart_pie_add.png"))); // NOI18N
        botaoGerar.setText("Gerar");
        botaoGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoGerarActionPerformed(evt);
            }
        });

        tipoDeTransacao.add(botaoDespesa);
        botaoDespesa.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        botaoDespesa.setText("Despesa");
        botaoDespesa.setActionCommand("Despesa");

        tipoDeTransacao.add(botaoProvento);
        botaoProvento.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        botaoProvento.setSelected(true);
        botaoProvento.setText("Provento");
        botaoProvento.setActionCommand("Provento");

        selectCategoria.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        selectCategoria.setModel(listaDeCategoria(Sistema.instance.getCategorias()));
        selectCategoria.setPreferredSize(new java.awt.Dimension(300, 30));

        labelCategoria.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelCategoria.setText("Categoria:");

        labelMes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelMes.setText("Mês:");

        botaoVoltar.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        botaoVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/arrow_left.png"))); // NOI18N
        botaoVoltar.setText("Voltar");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });

        selectMesInicio.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        labelA.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelA.setText("a");

        selectMesFinal.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        tipoDeRelatorio.add(botaoLista);
        botaoLista.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        botaoLista.setText("Lista");
        botaoLista.setActionCommand("Lista");

        tipoDeRelatorio.add(botaoHistograma);
        botaoHistograma.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        botaoHistograma.setSelected(true);
        botaoHistograma.setText("Histograma");
        botaoHistograma.setActionCommand("Histograma");

        jPanel2.setBackground(new java.awt.Color(251, 251, 251));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 565, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
        );

        labelTipo.setText("Tipo:");

        labelModo.setText("Modo:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectMesInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectMesFinal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectAnoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectAnoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botaoProvento)
                                    .addComponent(botaoLista)
                                    .addComponent(botaoHistograma)
                                    .addComponent(botaoDespesa)
                                    .addComponent(labelTipo)
                                    .addComponent(labelCategoria)
                                    .addComponent(labelMes)
                                    .addComponent(labelModo)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addComponent(labelA)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(selectCategoria, 0, 0, Short.MAX_VALUE))
                        .addGap(50, 50, 50))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botaoGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoVoltar)
                        .addGap(38, 38, 38)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(labelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(364, 364, 364))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(labelTitulo)
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelMes)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectMesInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectAnoInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectMesFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectAnoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addComponent(labelTipo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoProvento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoDespesa)
                        .addGap(18, 18, 18)
                        .addComponent(labelCategoria)
                        .addGap(18, 18, 18)
                        .addComponent(selectCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(labelModo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoHistograma)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botaoLista)
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botaoGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botaoVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 874, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoGerarActionPerformed
        if (getTipoDeRelatorio().equals("Histograma")) {
            try {
                gerarHistograma();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage());
            }
        } else {
            try {
                gerarLista();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage());
            }
        }
    }//GEN-LAST:event_botaoGerarActionPerformed

    private void gerarLista() throws Exception {
        jPanel2.removeAll();

        listaDeTransacoes = new ArrayList<>();
        for (Iterator<Conta> it = Sistema.instance.getContas().iterator(); it.hasNext();) {
            Conta conta = it.next();
            listaDeTransacoes.addAll(conta.getListaDeTransacoes());
        }
        Collections.sort(listaDeTransacoes);
        JTable tabela = new JTable();
        Categoria categoria = Sistema.instance.pesquisaCategoria(getCategoria());
        tabela.setModel(getTableModelTransacao(categoria, getMesInicio(), getMesFinal(), getAnoInicio(), getAnoFinal(), getTipo()));
        tabela.getTableHeader().setReorderingAllowed(false);
        tabela.setDefaultRenderer(String.class, new Renderizador());

        jPanel2.setLayout(new BorderLayout());
        JScrollPane tableContainer = new JScrollPane(tabela);
        jPanel2.add(tableContainer);
        jPanel2.validate();
    }

    private void gerarHistograma() throws Exception {
        jPanel2.removeAll();

        Categoria categoria = Sistema.instance.pesquisaCategoria(getCategoria());
        DefaultCategoryDataset dataset = gerarDataset(categoria, getMesInicio(), getMesFinal(), getAnoInicio(), getAnoFinal(), getTipo());

        JFreeChart chart = ChartFactory.createBarChart3D("Relatorio", "Data", "Valor",
                dataset, PlotOrientation.VERTICAL, true, false, false);
        chart.setBackgroundPaint(Color.white);
        CategoryPlot p = chart.getCategoryPlot();

        BarRenderer renderizador = (BarRenderer) p.getRenderer();
        DecimalFormat formatadorDecimal = new DecimalFormat("##.##");
        renderizador.setBaseItemLabelGenerator(new StandardCategoryItemLabelGenerator("{2}", formatadorDecimal));
        p.setRenderer(renderizador);
        renderizador.setBasePositiveItemLabelPosition(new ItemLabelPosition(ItemLabelAnchor.OUTSIDE12, TextAnchor.HALF_ASCENT_CENTER));
        renderizador.setBaseItemLabelsVisible(true);
        chart.getCategoryPlot().setRenderer(renderizador);

        if (getTipo().equals("Despesa")) {
            ValueMarker marcador = new ValueMarker(categoria.getOrcamento());
            marcador.setLabel("Orçamento da categoria");
            marcador.setLabelAnchor(RectangleAnchor.CENTER);
            marcador.setLabelTextAnchor(TextAnchor.TOP_CENTER);
            marcador.setPaint(Color.BLACK);
            p.addRangeMarker(marcador);
        }

        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setDomainZoomable(false);
        chartPanel.setRangeZoomable(false);
        chartPanel.setPreferredSize(new Dimension(567, 497));

        jPanel2.setLayout(new BorderLayout());
        jPanel2.add(chartPanel, BorderLayout.CENTER);
        jPanel2.validate();
    }

    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_botaoVoltarActionPerformed

    private int getMesInicio() {
        return selectMesInicio.getMonth();
    }

    private int getMesFinal() {
        return selectMesFinal.getMonth();
    }

    private int getAnoInicio() {
        return selectAnoInicio.getYear();
    }

    private int getAnoFinal() {
        return selectAnoFinal.getYear();
    }

    private String getCategoria() throws Exception {
        if (selectCategoria.getSelectedItem() == null) {
            throw new Exception("Não ha categoria selecionada.");
        }
        return (String) selectCategoria.getSelectedItem();
    }

    private String getTipo() {
        return tipoDeTransacao.getSelection().getActionCommand();
    }

    private String getTipoDeRelatorio() {
        return tipoDeRelatorio.getSelection().getActionCommand();
    }

    private DefaultComboBoxModel listaDeCategoria(List<Categoria> listaDeCategorias) {
        ArrayList<String> strings = new ArrayList<>();
        for (Iterator<Categoria> it = listaDeCategorias.iterator(); it.hasNext();) {
            Categoria cadaCategoria = it.next();
            strings.add(cadaCategoria.getNome());
        }
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for (Iterator<String> it = strings.iterator(); it.hasNext();) {
            String string = it.next();
            model.addElement(string);
        }
        return model;
    }

    private Calendar setData(Calendar data, int mes, int ano) {
        data.set(Calendar.DAY_OF_MONTH, 1);
        data.set(Calendar.MONTH, mes);
        data.set(Calendar.YEAR, ano);
        return data;
    }

    private DefaultCategoryDataset gerarDataset(Categoria categoria, int mesInicial,
            int mesFinal, int anoInicial, int anoFinal, String tipo) throws Exception {

        Calendar dataAtual = Calendar.getInstance();
        Calendar dataFinal = Calendar.getInstance();
        setData(dataAtual, mesInicial, anoInicial);
        setData(dataFinal, mesFinal, anoFinal);

        if (dataAtual.after(dataFinal)) {
            throw new Exception("Data inicial após data final.");
        }

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        while (true) {
            if (dataAtual.after(dataFinal)) {
                break;
            }
            for (Iterator<Conta> it = Sistema.instance.getContas().iterator(); it.hasNext();) {
                Conta conta = it.next();
                double valorDoMes = 0;
                for (Iterator<Transacao> it2 = Sistema.instance.getListaDeTransacoes(conta.getNome()).iterator(); it2.hasNext();) {
                    Transacao transacao = it2.next();
                    if (transacao.getCategoria() == categoria) {
                        if (transacao.getDataDeInsercao().get(Calendar.MONTH) == dataAtual.get(Calendar.MONTH)
                                && transacao.getDataDeInsercao().get(Calendar.YEAR) == dataAtual.get(Calendar.YEAR)) {
                            if (tipo.equals("Despesa") && transacao instanceof Despesa) {
                                valorDoMes += Math.abs(transacao.getValor());
                            } else if (tipo.equals("Provento") && transacao instanceof Provento) {
                                valorDoMes += transacao.getValor();
                            }
                        }
                    }
                }
                dataset.setValue(valorDoMes, conta.getNome(), formataDataMesAno.format(dataAtual.getTime()));
            }
            dataAtual.add(Calendar.MONTH, 1);
        }

        return dataset;
    }

    private DefaultTableModel getTableModelTransacao(Categoria categoria, int mesInicial, int mesFinal, int anoInicial,
            int anoFinal, String tipo) throws Exception {
        DefaultTableModel model = new DefaultTableModel() {
            /**
             *
             */
            private static final long serialVersionUID = 1L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        Calendar dataInicial = Calendar.getInstance();
        Calendar dataFinal = Calendar.getInstance();
        setData(dataInicial, mesInicial, anoInicial);
        setData(dataFinal, mesFinal, anoFinal);

        model.setColumnIdentifiers(new String[]{"Descrição", "Data", "Valor", "Recorrência"});
        for (Iterator<Transacao> it = listaDeTransacoes.iterator(); it.hasNext();) {
            Transacao transacao = it.next();
            SimpleDateFormat formataDataDiaMesAno = new SimpleDateFormat("dd/MM/yyyy");
            if (transacao.getCategoria() == categoria) {
                if (transacao.getDataDeInsercao().get(Calendar.MONTH) >= dataInicial.get(Calendar.MONTH)
                        && transacao.getDataDeInsercao().get(Calendar.YEAR) >= dataInicial.get(Calendar.YEAR)
                        && transacao.getDataDeInsercao().get(Calendar.MONTH) <= dataFinal.get(Calendar.MONTH)
                        && transacao.getDataDeInsercao().get(Calendar.YEAR) <= dataFinal.get(Calendar.YEAR)) {
                    if (tipo.equals("Despesa") && transacao instanceof Despesa) {
                        model.addRow(new String[]{transacao.getDescricao(),
                            formataDataDiaMesAno.format(transacao.getDataDeInsercao().getTime()),
                            String.valueOf(transacao.getValor()),
                            "" + transacao.getRecorrencia()});
                    } else if (tipo.equals("Provento") && transacao instanceof Provento) {
                        model.addRow(new String[]{transacao.getDescricao(),
                            formataDataDiaMesAno.format(transacao.getDataDeInsercao().getTime()),
                            String.valueOf(transacao.getValor()),
                            "" + transacao.getRecorrencia()});
                    }
                }
            }
        }

        return model;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton botaoDespesa;
    private javax.swing.JButton botaoGerar;
    private javax.swing.JRadioButton botaoHistograma;
    private javax.swing.JRadioButton botaoLista;
    private javax.swing.JRadioButton botaoProvento;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelA;
    private javax.swing.JLabel labelCategoria;
    private javax.swing.JLabel labelMes;
    private javax.swing.JLabel labelModo;
    private javax.swing.JLabel labelTipo;
    private javax.swing.JLabel labelTitulo;
    private com.toedter.calendar.JYearChooser selectAnoFinal;
    private com.toedter.calendar.JYearChooser selectAnoInicio;
    private javax.swing.JComboBox selectCategoria;
    private com.toedter.calendar.JMonthChooser selectMesFinal;
    private com.toedter.calendar.JMonthChooser selectMesInicio;
    private javax.swing.ButtonGroup tipoDeRelatorio;
    private javax.swing.ButtonGroup tipoDeTransacao;
    // End of variables declaration//GEN-END:variables
}
